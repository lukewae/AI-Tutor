name: JavaFX CI/CD Pipeline
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4
      
      # 2. Install JavaFX SDK and Linux dependencies
      - name: Setup JavaFX environment
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgtk-3-0 libxtst6 libxrender1
          wget https://download2.gluonhq.com/openjfx/21.0.2/openjfx-21.0.2_linux-x64_bin-sdk.zip
          unzip openjfx-21.0.2_linux-x64_bin-sdk.zip
          echo "JAVAFX_HOME=$(pwd)/javafx-sdk-21.0.2" >> $GITHUB_ENV
          Xvfb :99 -screen 0 1024x768x24 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
          
      # 3. Set up JDK 21 with Maven caching
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
          
      # 4. Initialize SQLite database for tests
      - name: Initialize test database
        run: |
          mkdir -p ${HOME}/.config/aitutor
          touch ${HOME}/.config/aitutor/aitutor.db
          
      # 5. Verify test files exist
      - name: Check test files
        run: |
          echo "Checking for test files..."
          find src/test -name "*.java" -type f || echo "No test files found"
          ls -la src/test/java/com/example/bugs/ || echo "Test directory not found"
          
      # 6. Compile test classes first
      - name: Compile tests
        run: |
          mvn -B test-compile \
            -Dmaven.compiler.source=21 \
            -Dmaven.compiler.target=21 \
            --no-transfer-progress
            
      # 7. Run tests with Maven
      - name: Run Tests with Maven
        run: |
          mvn -B test \
            -Dmaven.compiler.source=21 \
            -Dmaven.compiler.target=21 \
            -Dtestfx.robot=glass \
            -Dtestfx.headless=true \
            -Dprism.order=sw \
            -Dprism.text=t2k \
            -Djava.awt.headless=true \
            -Dheadless=true \
            -Dglass.platform=Monocle \
            -Dmonocle.platform=Headless \
            -Dtest=FxTest,SignUpTest,UserTest,NavigationAndChatbotTest \
            --no-transfer-progress
            
      # 8. List test results for debugging
      - name: Check test results
        if: always()
        run: |
          echo "Checking for test result files..."
          find . -name "surefire-reports" -type d || echo "No surefire-reports directory found"
          find . -name "TEST-*.xml" -type f || echo "No test XML files found"
          ls -la target/surefire-reports/ || echo "No target/surefire-reports directory"
          
      # 9. Publish Test Results
      - name: Publish Test Results
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'
          fail_on_failure: true
          require_tests: false
          check_name: 'JavaFX Test Results'
          
      # 10. Build package (if tests pass)
      - name: Build package
        if: success()
        run: |
          mvn -B package -DskipTests \
            -Dmaven.compiler.source=21 \
            -Dmaven.compiler.target=21
            
      # 11. Update dependency graph
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
