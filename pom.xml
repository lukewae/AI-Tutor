<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>address-book</artifactId> <!-- Consider renaming this to ai-tutor if appropriate -->
    <version>1.0-SNAPSHOT</version>
    <name>ai-tutor</name> <!-- Changed name for clarity -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.10.0</junit.version>
        <javafx.version>21</javafx.version> <!-- Define JavaFX version -->
        <maven.compiler.source>21</maven.compiler.source> <!-- Added for consistency -->
        <maven.compiler.target>21</maven.compiler.target> <!-- Added for consistency -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.9</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId> <!-- Or slf4j-nop for tests if you prefer no logging -->
            <version>2.0.9</version>
            <scope>runtime</scope> <!-- 'runtime' for app, 'test' if only for tests -->
        </dependency>
        <dependency>
            <groupId>io.github.ollama4j</groupId>
            <artifactId>ollama4j</artifactId>
            <version>1.0.100</version>
        </dependency>

        <!-- SQLite JDBC Driver -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.49.1.0</version> <!-- Your version was 3.49.1.0, updated to a more recent common one -->
        </dependency>

        <!-- JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- TestFX -->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.18</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.18</version>
            <scope>test</scope>
        </dependency>

        <!-- Mockito -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.11.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.11.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running with: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <!-- IMPORTANT: Verify your module name and main class package -->
                            <!-- Assuming module name is com.example.aitutor (derived from project name) -->
                            <!-- and package for HelloApplication is com.example.bugs -->
                            <mainClass>com.example.aitutor/com.example.bugs.HelloApplication</mainClass>
                            <!-- If not modular, it would be: -->
                            <!-- <mainClass>com.example.bugs.HelloApplication</mainClass> -->
                            <launcher>app</launcher>
                            <jlinkZipName>app</jlinkZipName>
                            <jlinkImageName>app</jlinkImageName>
                            <noManPages>true</noManPages>
                            <stripDebug>true</stripDebug>
                            <noHeaderFiles>true</noHeaderFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <argLine>
                        --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
                        --add-opens javafx.graphics/javafx.stage=ALL-UNNAMED
                        --add-opens javafx.graphics/javafx.scene=ALL-UNNAMED
                        --add-opens javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED
                        --add-opens javafx.controls/javafx.scene.control.skin=ALL-UNNAMED
                        --add-opens javafx.base/com.sun.javafx.event=ALL-UNNAMED
                        --add-opens javafx.base/com.sun.javafx.collections=ALL-UNNAMED
                        --add-opens javafx.base/javafx.beans.property.adapter=ALL-UNNAMED
                        <!-- Add more opens/exports if your specific tests need them -->
                        ${surefire.argLine} <!-- Allows other plugins to add argLine properties -->
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>